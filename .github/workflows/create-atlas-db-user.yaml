name: create mongo db user with specific permission

on:
  workflow_dispatch:
    inputs:
      client_name:
        description: 'Client name (e.g., wipro)'
        required: true
        # type: choice
        # options:
        #   - wipro
        #   - lti
      Role_name:
        description: 'Role name (e.g., read)'
        required: true
        type: choice
        options:
          - read
          - readWrite
jobs:
  create-atlas-db-user:
    runs-on: ubuntu-latest          

    steps:
    - name: installing atalas mongodb and setting up monogo cli
      run: |
        sudo apt-get install gnupg curl
        curl -fsSL https://pgp.mongodb.com/server-7.0.asc | \
        sudo gpg -o /usr/share/keyrings/mongodb-server-7.0.gpg \
        --dearmor
        echo "deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-7.0.gpg ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/7.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-7.0.list
        sudo apt-get update
        sudo apt-get install -y mongodb-atlas
        sudo apt-get install -y mongodb-atlas-cli
        atlas -v
        
    - name: setting up config detsils
      run: |
        
        # Set Atlas CLI configuration
        atlas config set public_api_key ${{ secrets.ATLAS_PUBLIC_KEY }}
        atlas config set private_api_key ${{ secrets.ATLAS_PRIVATE_KEY }}
        atlas config set project_id ${{ secrets.ATLAS_PROJECT_ID }}
        
    - name: Generate 8-character password and create db user
      run: |
        # Generate 8-character password
        PASSWORD=$(tr -dc 'A-Za-z0-9!@#$%&*_' </dev/urandom | head -c 8)

        # Mask the password in GitHub logs
        echo "::add-mask::$PASSWORD"

        # Save password to file
        echo "$PASSWORD" > ${{ github.event.inputs.client_name }}user-password.txt

        echo "Password saved to ${{ github.event.inputs.client_name }}user-password.txt"
      
        atlas dbusers create --username ${{ github.event.inputs.client_name }}user --password "$PASSWORD" --role ${{ github.event.inputs.Role_name }}@tru-${{ github.event.inputs.client_name }} --scope Tr-mongo-cluster

    - name: Upload ${{ github.event.inputs.client_name }}user-password.txt as artifact
      uses: actions/upload-artifact@v4
      with:
        name: generated-password
        path: ${{ github.event.inputs.client_name }}user-password.txt
    
    - name: removing configuration details
      run: |
        rm -rf ~/.config/atlascli/config.toml

